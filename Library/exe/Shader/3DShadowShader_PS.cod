//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Cbuffer
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   row_major float4x4 shadowMatrix;   // Offset:   64 Size:    64 [unused]
//   float4 lightDir;                   // Offset:  128 Size:    16
//   float3 lightColour;                // Offset:  144 Size:    12 [unused]
//   float bias;                        // Offset:  156 Size:     4
//
// }
//
// cbuffer CBColour
// {
//
//   float4 materialColour;             // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// shadowMapSamplerState           sampler_c      NA          NA             s0      1 
// diffuseMapSamplerState            sampler      NA          NA             s1      1 
// normalMapSamplerState             sampler      NA          NA             s2      1 
// shadowMap                         texture  float4          2d             t0      1 
// diffuseMap                        texture  float4          2d             t1      1 
// normalMap                         texture  float4          2d             t3      1 
// Cbuffer                           cbuffer      NA          NA            cb0      1 
// CBColour                          cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyz 
// TECOORD                  0   xy          3     NONE   float   xy  
// SHADOWCOORD              0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[10], immediateIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.normal.x; v1.y <- pin.normal.y; v1.z <- pin.normal.z; v1.w <- pin.normal.w; 
//   v2.x <- pin.tangent.x; v2.y <- pin.tangent.y; v2.z <- pin.tangent.z; v2.w <- pin.tangent.w; 
//   v3.x <- pin.texcoord.x; v3.y <- pin.texcoord.y; 
//   v4.x <- pin.shadowCoord.x; v4.y <- pin.shadowCoord.y; v4.z <- pin.shadowCoord.z; v4.w <- pin.shadowCoord.w; 
//   o0.x <- <PSMain return value>.x; o0.y <- <PSMain return value>.y; o0.z <- <PSMain return value>.z; o0.w <- <PSMain return value>.w
//
#line 22 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\3DShadowShader_PS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t1.xyzw, s1
mul r0.xyzw, r0.xyzw, cb2[0].xyzw  // r0.x <- mapDiff.x; r0.y <- mapDiff.y; r0.z <- mapDiff.z; r0.w <- mapDiff.w

#line 24
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v3.xyxx, t3.xyzw, s2
mov r1.xyz, r1.xyzx  // r1.x <- normalMapColour.x; r1.y <- normalMapColour.y; r1.z <- normalMapColour.z

#line 25
mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r2.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r1.xyz, r1.xyzx, r2.xyzx

#line 28
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v1.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 29
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx  // r3.x <- T.x; r3.y <- T.y; r3.z <- T.z

#line 30
mul r4.xyz, r2.yzxy, r3.zxyz
mul r5.xyz, r2.zxyz, r3.yzxy
mov r5.xyz, -r5.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx  // r4.x <- B.x; r4.y <- B.y; r4.z <- B.z

#line 31
mul r3.xyz, r1.xxxx, r3.xyzx
mul r1.xyw, r1.yyyy, r4.xyxz
add r1.xyw, r1.xyxw, r3.xyxz
mul r2.xyz, r1.zzzz, r2.xyzx
add r1.xyz, r1.xywx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 33
mov r2.xyz, -cb0[8].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 35
dp3 r1.x, r1.xyzx, r2.xyzx
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, l(1.000000)  // r1.x <- diffuseFactor

#line 36
mul r1.x, r1.x, r1.x

#line 38
div r1.yzw, v4.xxyz, v4.wwww  // r1.y <- shadowCoord.x; r1.z <- shadowCoord.y; r1.w <- shadowCoord.z

#line 40
deriv_rtx_coarse r2.x, r1.w
mov r2.y, -r2.x
max r2.x, r2.y, r2.x
deriv_rty_coarse r2.y, r1.w
mov r2.z, -r2.y
max r2.y, r2.z, r2.y
max r2.x, r2.y, r2.x  // r2.x <- maxDepthSlope

#line 42
mov r2.y, l(0.000100)  // r2.y <- slopeScaleBias

#line 43
mov r2.z, l(0.010000)  // r2.z <- depthBiasClamp

#line 44
mov r3.xyz, l(0.650000,0.650000,0.650000,0)  // r3.x <- shadowColour.x; r3.y <- shadowColour.y; r3.z <- shadowColour.z

#line 46
mul r2.x, r2.x, r2.y
add r2.x, r2.x, cb0[9].w  // r2.x <- shadowBias

#line 47
min r2.x, r2.z, r2.x

#line 48
mov r2.x, -r2.x
add r1.w, r1.w, r2.x
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t0.xxxx, s0, r1.w  // r1.y <- shadowThreshold

#line 49
mov r2.xyz, -r3.xyzx
add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.yzw, r1.yyyy, r2.xxyz
add r1.yzw, r1.yyzw, r3.xxyz  // r1.y <- shadowColour.x; r1.z <- shadowColour.y; r1.w <- shadowColour.z

#line 51
itof r2.x, l(1)
mov r2.y, -r1.x
add r2.x, r2.y, r2.x
mul r2.xyz, r0.xyzx, r2.xxxx
mul r2.xyz, r2.xyzx, l(0.800000, 0.800000, 0.800000, 0.000000)  // r2.x <- Ka.x; r2.y <- Ka.y; r2.z <- Ka.z

#line 52
mul r0.xyz, r0.xyzx, r1.xxxx
mul r0.xyz, r0.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)  // r0.x <- Kb.x; r0.y <- Kb.y; r0.z <- Kb.z

#line 53
add r0.xyz, r0.xyzx, r2.xyzx
mul r0.xyz, r1.yzwy, r0.xyzx  // r0.x <- outColour.x; r0.y <- outColour.y; r0.z <- outColour.z

#line 54
mov r0.w, r0.w  // r0.w <- outColour.w

#line 56
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 70 instruction slots used
