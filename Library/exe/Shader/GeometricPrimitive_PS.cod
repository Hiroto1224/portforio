//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame2
// {
//
//   float4 LightColor;                 // Offset:    0 Size:    16
//   float4 LightDir;                   // Offset:   16 Size:    16
//   float4 AmbientColor;               // Offset:   32 Size:    16
//   float4 EyePos;                     // Offset:   48 Size:    16
//
// }
//
// cbuffer CBPerFrame3
// {
//
//   float4x4 LightViewProjection;      // Offset:    0 Size:    64 [unused]
//   float4 ShadowColor;                // Offset:   64 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// ShadowSampler                     sampler      NA          NA             s3      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// ShadowTexture                     texture  float4          2d             t3      1 
// CBPerFrame2                       cbuffer      NA          NA            cb2      1 
// CBPerFrame3                       cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOUR                   0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[4], immediateIndexed
dcl_constantbuffer CB3[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Colour.x; v1.y <- input.Colour.y; v1.z <- input.Colour.z; v1.w <- input.Colour.w; 
//   v2.x <- input.wNormal.x; v2.y <- input.wNormal.y; v2.z <- input.wNormal.z; 
//   v3.x <- input.wPosition.x; v3.y <- input.wPosition.y; v3.z <- input.wPosition.z; 
//   v4.x <- input.Tex.x; v4.y <- input.Tex.y; 
//   v5.x <- input.vShadow.x; v5.y <- input.vShadow.y; v5.z <- input.vShadow.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 53 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\geometricPrimitive.hlsli"
mov r0.x, l(0.000800)  // r0.x <- Bias

#line 13 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\GeometricPrimitive_PS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v4.xyxx, t0.xyzw, s0  // r1.x <- colour.x; r1.y <- colour.y; r1.z <- colour.z; r1.w <- colour.w

#line 14
dp3 r0.y, v2.xyzx, v2.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, v2.xxyz  // r0.y <- N.x; r0.z <- N.y; r0.w <- N.z

#line 15
mov r2.xyz, -v3.xyzx
add r2.xyz, r2.xyzx, cb2[3].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx  // r2.x <- E.x; r2.y <- E.y; r2.z <- E.z

#line 16
dp3 r2.w, cb2[1].xyzx, cb2[1].xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, cb2[1].xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 18
mov r4.xyz, cb2[2].xyzx  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z

#line 21
mov r5.xyz, cb2[0].xyzx  // r5.x <- C.x; r5.y <- C.y; r5.z <- C.z

#line 22
mov r6.xyz, l(1.000000,1.000000,1.000000,0)  // r6.x <- Kd.x; r6.y <- Kd.y; r6.z <- Kd.z

#line 23
nop 
mov r0.yzw, r0.yyzw
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx
mov r6.xyz, r6.xyzx

#line 113 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\geometricPrimitive.hlsli"
mov r7.xyz, -r3.xyzx
dp3 r2.w, r0.yzwy, r7.xyzx  // r2.w <- D

#line 114
itof r3.w, l(0)
max r2.w, r2.w, r3.w

#line 115
mul r7.xyz, r2.wwww, r5.xyzx
mul r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- <Diffuse return value>.x; r6.y <- <Diffuse return value>.y; r6.z <- <Diffuse return value>.z

#line 23 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\GeometricPrimitive_PS.hlsl"
mov r6.xyz, r6.xyzx  // r6.x <- D.x; r6.y <- D.y; r6.z <- D.z

#line 26
mov r7.xyz, l(1.000000,1.000000,1.000000,0)  // r7.x <- Ks.x; r7.y <- Ks.y; r7.z <- Ks.z

#line 27
nop 
mov r0.yzw, r0.yyzw
mov r3.xyz, r3.xyzx
mov r5.xyz, r5.xyzx
mov r2.xyz, r2.xyzx
mov r7.xyz, r7.xyzx

#line 173 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\geometricPrimitive.hlsli"
dp3 r2.w, r3.xyzx, r0.yzwy
add r2.w, r2.w, r2.w
mov r2.w, -r2.w
mul r0.yzw, r0.yyzw, r2.wwww
add r0.yzw, r3.xxyz, r0.yyzw
dp3 r2.w, r0.yzwy, r0.yzwy
rsq r2.w, r2.w
mul r0.yzw, r0.yyzw, r2.wwww  // r0.y <- R.x; r0.z <- R.y; r0.w <- R.z

#line 174
dp3 r2.z, r0.yzwy, r2.xyzx
mov r2.xyz, r2.zzzz  // r2.x <- S.x; r2.y <- S.y; r2.z <- S.z

#line 175
itof r0.yzw, l(0, 0, 0, 0)
max r0.yzw, r2.xxyz, r0.yyzw  // r0.y <- S.x; r0.z <- S.y; r0.w <- S.z

#line 176
mov r2.xyz, l(1.000000,1.000000,1.000000,0)
mul r0.yzw, r0.yyzw, r0.yyzw
mul r0.yzw, r0.yyzw, r0.yyzw
mul r2.xyz, r0.yzwy, r2.xyzx
mul r0.yzw, r0.yyzw, r0.yyzw
mul r0.yzw, r0.yyzw, r0.yyzw
mul r0.yzw, r0.yyzw, r2.xxyz  // r0.y <- S.x; r0.z <- S.y; r0.w <- S.z

#line 177
mul r0.yzw, r7.xxyz, r0.yyzw
mul r0.yzw, r5.xxyz, r0.yyzw  // r0.y <- S.x; r0.z <- S.y; r0.w <- S.z

#line 178
mov r0.yzw, r0.yyzw  // r0.y <- <PhongSpecular return value>.x; r0.z <- <PhongSpecular return value>.y; r0.w <- <PhongSpecular return value>.z

#line 27 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\GeometricPrimitive_PS.hlsl"
mov r0.yzw, r0.yyzw  // r0.y <- S.x; r0.z <- S.y; r0.w <- S.z

#line 29
add r2.xyz, r4.xyzx, r6.xyzx
add r2.xyz, r0.yzwy, r2.xyzx
mov r2.w, l(1.000000)
mul r2.xyzw, r2.xyzw, v1.xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw

#line 33
nop 
nop 
nop 
mov r0.y, v5.z
mov r2.xyz, cb3[4].xyzx
mov r0.x, r0.x

#line 97 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\geometricPrimitive.hlsli"
sample_indexable(texture2d)(float,float,float,float) r0.z, v5.xyxx, t3.yzxw, s3
mov r0.z, r0.z  // r0.z <- d

#line 99
mov r0.z, -r0.z
add r0.y, r0.z, r0.y
lt r0.x, r0.x, r0.y
itof r0.yzw, l(0, 1, 1, 1)
movc r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy  // r0.x <- Scolor.x; r0.y <- Scolor.y; r0.z <- Scolor.z

#line 100
mov r0.xyz, r0.xyzx  // r0.x <- <GetShadow return value>.x; r0.y <- <GetShadow return value>.y; r0.z <- <GetShadow return value>.z

#line 33 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\GeometricPrimitive_PS.hlsl"
mul r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- colour.x; r0.y <- colour.y; r0.z <- colour.z

#line 35
mov o0.xyz, r0.xyzx
mov o0.w, r1.w
ret 
// Approximately 81 instruction slots used
