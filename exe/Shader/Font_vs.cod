//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOUR                   0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOUR                   0   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- texcoord.x; v1.y <- texcoord.y; 
//   v2.x <- color.x; v2.y <- color.y; v2.z <- color.z; v2.w <- color.w; 
//   o2.x <- <vsMain return value>.color.x; o2.y <- <vsMain return value>.color.y; o2.z <- <vsMain return value>.color.z; o2.w <- <vsMain return value>.color.w; 
//   o1.x <- <vsMain return value>.texcoord.x; o1.y <- <vsMain return value>.texcoord.y; 
//   o0.x <- <vsMain return value>.position.x; o0.y <- <vsMain return value>.position.y; o0.z <- <vsMain return value>.position.z; o0.w <- <vsMain return value>.position.w
//
#line 12 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\Font_vs.hlsl"
mov r0.xyzw, v0.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 13
mov r1.xyzw, v2.xyzw  // r1.x <- vout.color.x; r1.y <- vout.color.y; r1.z <- vout.color.z; r1.w <- vout.color.w

#line 14
mov r2.xy, v1.xyxx  // r2.x <- vout.texcoord.x; r2.y <- vout.texcoord.y

#line 16
mov o0.xyzw, r0.xyzw
mov o2.xyzw, r1.xyzw
mov o1.xy, r2.xyxx
ret 
// Approximately 7 instruction slots used
