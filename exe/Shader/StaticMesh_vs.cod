//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CAMERA_CONSTANTS
// {
//
//   struct CAMERA
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 viewProjection;// Offset:  160
//       row_major float4x4 inverseView;// Offset:  224
//       row_major float4x4 inverseProjection;// Offset:  288
//       row_major float4x4 inverseViewProjection;// Offset:  352
//
//   } camera;                          // Offset:    0 Size:   416
//
// }
//
// cbuffer OBJECT_CONSTANTS
// {
//
//   float4x4 world;                    // Offset:    0 Size:    64
//   float4 color;                      // Offset:   64 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANTS                  cbuffer      NA          NA            cb0      1 
// CAMERA_CONSTANTS                  cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// BINORMAL                 0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 0   xy          5     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[14], immediateIndexed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xy
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   o5.x <- <main return value>.texcoord.x; o5.y <- <main return value>.texcoord.y; 
//   o4.x <- <main return value>.binormal.x; o4.y <- <main return value>.binormal.y; o4.z <- <main return value>.binormal.z; o4.w <- <main return value>.binormal.w; 
//   o3.x <- <main return value>.tangent.x; o3.y <- <main return value>.tangent.y; o3.z <- <main return value>.tangent.z; o3.w <- <main return value>.tangent.w; 
//   o2.x <- <main return value>.normal.x; o2.y <- <main return value>.normal.y; o2.z <- <main return value>.normal.z; o2.w <- <main return value>.normal.w; 
//   o1.x <- <main return value>.position.x; o1.y <- <main return value>.position.y; o1.z <- <main return value>.position.z; o1.w <- <main return value>.position.w; 
//   o0.x <- <main return value>.sv_position.x; o0.y <- <main return value>.sv_position.y; o0.z <- <main return value>.sv_position.z; o0.w <- <main return value>.sv_position.w
//
#line 7 "C:\Myfolder\3年次\StartingOver\StartingOver\myLibScripts\Shader\StaticMesh_vs.hlsl"
mul r0.xyzw, cb1[10].xxxx, cb0[0].xyzw
mul r1.xyzw, cb1[11].xxxx, cb0[1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[12].xxxx, cb0[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[13].xxxx, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[10].yyyy, cb0[0].xyzw
mul r2.xyzw, cb1[11].yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[12].yyyy, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[13].yyyy, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[10].zzzz, cb0[0].xyzw
mul r3.xyzw, cb1[11].zzzz, cb0[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[12].zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[13].zzzz, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[10].wwww, cb0[0].xyzw
mul r4.xyzw, cb1[11].wwww, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb1[12].wwww, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb1[13].wwww, cb0[3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
dp4 r0.x, v0.xyzw, r0.xyzw  // r0.x <- vout.sv_position.x
dp4 r0.y, v0.xyzw, r1.xyzw  // r0.y <- vout.sv_position.y
dp4 r0.z, v0.xyzw, r2.xyzw  // r0.z <- vout.sv_position.z
dp4 r0.w, v0.xyzw, r3.xyzw  // r0.w <- vout.sv_position.w

#line 9
dp4 r1.x, v0.xyzw, cb0[0].xyzw  // r1.x <- vout.position.x
dp4 r1.y, v0.xyzw, cb0[1].xyzw  // r1.y <- vout.position.y
dp4 r1.z, v0.xyzw, cb0[2].xyzw  // r1.z <- vout.position.z
dp4 r1.w, v0.xyzw, cb0[3].xyzw  // r1.w <- vout.position.w

#line 11
itof r2.w, l(0)  // r2.w <- vin.normal.w

#line 12
mov r2.xyz, v1.xyzx
dp4 r3.x, r2.xyzw, cb0[0].xyzw
dp4 r3.y, r2.xyzw, cb0[1].xyzw
dp4 r3.z, r2.xyzw, cb0[2].xyzw
dp4 r3.w, r2.xyzw, cb0[3].xyzw
dp4 r2.x, r3.xyzw, r3.xyzw
rsq r2.x, r2.x
mul r2.xyzw, r2.xxxx, r3.xyzw  // r2.x <- vout.normal.x; r2.y <- vout.normal.y; r2.z <- vout.normal.z; r2.w <- vout.normal.w

#line 14
mov r3.x, v2.w  // r3.x <- sigma

#line 15
itof r4.w, l(0)  // r4.w <- vin.tangent.w

#line 16
mov r4.xyz, v2.xyzx
dp4 r5.x, r4.xyzw, cb0[0].xyzw
dp4 r5.y, r4.xyzw, cb0[1].xyzw
dp4 r5.z, r4.xyzw, cb0[2].xyzw
dp4 r5.w, r4.xyzw, cb0[3].xyzw
dp4 r3.y, r5.xyzw, r5.xyzw
rsq r3.y, r3.y
mul r4.xyzw, r3.yyyy, r5.xyzw  // r4.x <- vout.tangent.x; r4.y <- vout.tangent.y; r4.z <- vout.tangent.z; r4.w <- vout.tangent.w

#line 18
mul r3.yzw, v1.yyzx, v2.zzxy
mul r5.xyz, v1.zxyz, v2.yzxy
mov r5.xyz, -r5.xyzx
add r3.yzw, r3.yyzw, r5.xxyz
mul r3.xyz, r3.xxxx, r3.yzwy  // r3.x <- vout.binormal.x; r3.y <- vout.binormal.y; r3.z <- vout.binormal.z

#line 19
itof r3.w, l(0)  // r3.w <- vout.binormal.w

#line 21
mov r5.xy, v3.xyxx  // r5.x <- vout.texcoord.x; r5.y <- vout.texcoord.y

#line 23
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyzw, r2.xyzw
mov o3.xyzw, r4.xyzw
mov o4.xyz, r3.xyzx
mov o4.w, r3.w
mov o5.xy, r5.xyxx
ret 
// Approximately 70 instruction slots used
